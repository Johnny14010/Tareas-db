## 1. Crear un función y un trigger para validar que el numero de cedula del cliente tenga 10 números (no letras) en la tabla cliente.

- Sentencia: 
CREATE OR REPLACE FUNCTION validate_cedula_length()
RETURNS TRIGGER AS $$
BEGIN
    IF length(NEW.cedula) <> 10 THEN
        RAISE EXCEPTION 'La cédula debe tener exactamente 10 números';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;


- Trigger:
CREATE TRIGGER check_cedula_length
BEFORE INSERT OR UPDATE ON cliente
FOR EACH ROW
EXECUTE FUNCTION validate_cedula_length();


 
- Captura:


## 2. Crear un función y un trigger para que cada vez que se inserte un nuevo registro en la tabla item se disminuya el stock de la tabla product.

- Sentencia: 
CREATE OR REPLACE FUNCTION update_product_stock()
RETURNS TRIGGER AS $$
BEGIN
    UPDATE product
    SET stock = stock - NEW.quantity
    WHERE id = NEW.product_id;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;


- Trigger:
CREATE TRIGGER update_stock_on_insert
AFTER INSERT ON item
FOR EACH ROW
EXECUTE FUNCTION update_product_stock();

- Captura:

## 3. Crear un función y un trigger para la tabla invoice donde valide que el campo create_at sea del año actual (fecha sistema).

- Sentencia: 
CREATE OR REPLACE FUNCTION validate_invoice_date()
RETURNS TRIGGER AS $$
BEGIN
    IF extract(year from NEW.created_at) <> extract(year from now()) THEN
        RAISE EXCEPTION 'La fecha de creación de la factura debe ser del año actual';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;


- Trigger:
CREATE TRIGGER check_invoice_date
BEFORE INSERT ON invoice
FOR EACH ROW
EXECUTE FUNCTION validate_invoice_date();


- Captura:


## 4. Crear un función y un trigger para la tabla client y validar que el correo tenga un @.

- Sentencia: 

CREATE OR REPLACE FUNCTION validate_client_email()
RETURNS TRIGGER AS $$
BEGIN
    IF position('@' in NEW.email) = 0 THEN
        RAISE EXCEPTION 'El correo electrónico debe contener un "@"';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

- Trigger:
CREATE TRIGGER check_client_email
BEFORE INSERT OR UPDATE ON cliente
FOR EACH ROW
EXECUTE FUNCTION validate_client_email();

- Captura:


